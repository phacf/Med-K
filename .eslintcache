[{"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/routes/index.js":"1","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/HamburguerMenu/index.jsx":"2","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/SelectPatients/index.jsx":"3","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/WelcomeContent/styles.js":"4","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/store/modules/user/actions.js":"5","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/pages/DoctorRequest/index.jsx":"6","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/pages/PatientExam/styles.js":"7","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/RegisterForm/index.jsx":"8","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/PageTitle/styles.js":"9","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/Motion/index.jsx":"10","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/pages/Info/styles.js":"11","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/VaccinesCard/index.jsx":"12","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/services/api.js":"13"},{"size":2697,"mtime":1611185522956,"results":"14","hashOfConfig":"15"},{"size":352,"mtime":1611102520431,"results":"16","hashOfConfig":"15"},{"size":935,"mtime":1611235684715,"results":"17","hashOfConfig":"15"},{"size":843,"mtime":1611185522712,"results":"18","hashOfConfig":"15"},{"size":489,"mtime":1611103766128,"results":"19","hashOfConfig":"15"},{"size":1991,"mtime":1611257509133,"results":"20","hashOfConfig":"15"},{"size":2121,"mtime":1611257509173,"results":"21","hashOfConfig":"15"},{"size":6562,"mtime":1611103766128,"results":"22","hashOfConfig":"15"},{"size":309,"mtime":1611257509077,"results":"23","hashOfConfig":"15"},{"size":465,"mtime":1611102520435,"results":"24","hashOfConfig":"15"},{"size":683,"mtime":1611257509161,"results":"25","hashOfConfig":"15"},{"size":546,"mtime":1611257509093,"results":"26","hashOfConfig":"15"},{"size":229,"mtime":1611270108623,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"12p19w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/routes/index.js",[],["56","57"],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/HamburguerMenu/index.jsx",[],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/SelectPatients/index.jsx",["58"],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/WelcomeContent/styles.js",[],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/store/modules/user/actions.js",[],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/pages/DoctorRequest/index.jsx",["59"],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/pages/PatientExam/styles.js",[],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/RegisterForm/index.jsx",["60"],"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { mask, unMask } from \"remask\";\nimport Swal from \"sweetalert2\";\nimport { userRegisterThunk } from \"../../store/modules/user/thunk\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Content, StyledForm } from \"../FormComponents/styles\";\nimport Motion from \"../Motion\";\n\nconst RegisterForm = () => {\n  const name = yup\n    .string()\n    .min(3, \"Nome inválido\")\n    .matches(/^[a-zA-z]/, \"Use apenas letras\")\n    .required(\"Campo requerido\");\n\n  const email = yup\n    .string()\n    .email(\"Email inválido\")\n    .required(\"Campo requerido\");\n\n  const document = yup\n    .string()\n    .min(11, \"Minimo de 11 caracteres\")\n    .required(\"Campo requerido\");\n\n  const password = yup\n    .string()\n    .min(8, \"Minimo de 8 caracteres\")\n    .matches(\n      /^((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n      \"Formato inválido\"\n    )\n    .required(\"Campo requerido\");\n\n  const passwordCheck = yup\n    .string()\n    .required(\"Campo requerido\")\n    .oneOf([yup.ref(\"password\")], \"As senhas não combinam\");\n\n  const schema = yup.object().shape({\n    name,\n    email,\n    document,\n    password,\n    passwordCheck,\n  });\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const handleForm = (data) => {\n    userRegisterThunk(data);\n    Swal.fire(\"Cadastro realizado!\", \"Faça login para continuar.\", \"success\");\n    history.push(\"/\");\n  };\n\n  const [docValue, setDocValue] = useState(\"\");\n  const [docType, setDocType] = useState(\"CPF\");\n  const [passwordState, setPasswordState] = useState(\"\");\n  const [passwordCheckState, setPasswordCheckState] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [documentError, setDocumentError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [passwordCheckError, setPasswordCheckError] = useState(false);\n\n  return (\n    <Motion>\n      <Content>\n        <h1>Cadastro</h1>\n        <StyledForm\n          onSubmit={handleSubmit(handleForm)}\n          nameError={nameError}\n          emailError={emailError}\n          documentError={documentError}\n          passwordError={passwordError}\n          passwordCheckError={passwordCheckError}\n        >\n          <div className=\"radioContent\">\n            <div className=\"radioInfo\">\n              <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"patient\"\n                defaultChecked\n                className=\"inputRadio\"\n                ref={register}\n                onClick={() => {\n                  setDocType(\"CPF\");\n                  setDocValue(\"\");\n                }}\n              />\n              <label className=\"labelRadio\">Paciente</label>\n            </div>\n            <div className=\"radioInfo\">\n              <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"medic\"\n                className=\"inputRadio\"\n                ref={register}\n                onClick={() => {\n                  setDocType(\"CRM\");\n                  setDocValue(\"\");\n                }}\n              />\n              <label className=\"labelRadio\">Médico</label>\n            </div>\n          </div>\n          <div>\n            <input\n              name=\"name\"\n              required\n              ref={register}\n              onChange={(e) =>\n                name.isValid(e.target.value).then((res) => setNameError(res))\n              }\n            ></input>\n            <label htmlFor=\"name\" className=\"name\">\n              <span>Nome</span>\n            </label>\n          </div>\n          <p>{errors.name?.message}</p>\n          <div>\n            <input\n              name=\"email\"\n              required\n              ref={register}\n              onChange={(e) =>\n                email.isValid(e.target.value).then((res) => setEmailError(res))\n              }\n            ></input>\n            <label htmlFor=\"email\" className=\"email\">\n              <span>Email</span>\n            </label>\n          </div>\n          <p>{errors.email?.message}</p>\n          <div>\n            <input\n              name=\"document\"\n              required\n              autoComplete=\"off\"\n              ref={register}\n              value={docValue}\n              onChange={(e) => {\n                let input = unMask(e.target.value);\n\n                document.isValid(input).then((res) => setDocumentError(res));\n\n                docType === \"CPF\"\n                  ? setDocValue(mask(input, [\"999.999.999-99\"]))\n                  : setDocValue(mask(input, [\"999999999/AA\"]));\n              }}\n            ></input>\n            <label htmlFor=\"document\" className=\"document\">\n              <span>{docType}</span>\n            </label>\n          </div>\n          <p>{errors.document?.message}</p>\n          <div>\n            <input\n              name=\"password\"\n              required\n              ref={register}\n              type=\"password\"\n              onChange={(e) => {\n                const input = e.target.value;\n                password.isValid(input).then((res) => {\n                  setPasswordError(res);\n                  setPasswordState(input);\n                  setPasswordCheckError(passwordCheckState === input);\n                });\n              }}\n            ></input>\n            <label htmlFor=\"password\" className=\"password\">\n              <span className=\"labelSpan\">Senha</span>\n            </label>\n          </div>\n          <p>{errors.password?.message}</p>\n          <div>\n            <input\n              name=\"passwordCheck\"\n              required\n              ref={register}\n              type=\"password\"\n              onChange={(e) => {\n                setPasswordCheckError(e.target.value === passwordState);\n                setPasswordCheckState(e.target.value);\n              }}\n            ></input>\n            <label htmlFor=\"passwordCheck\" className=\"passwordCheck\">\n              <span className=\"labelSpan\">Confirmar Senha</span>\n            </label>\n          </div>\n          <p>{errors.passwordCheck?.message}</p>\n          <button type=\"submit\">Cadastrar</button>\n        </StyledForm>\n        <Link to=\"/\">Login</Link>\n      </Content>\n    </Motion>\n  );\n};\n\nexport default RegisterForm;\n","/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/PageTitle/styles.js",[],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/Motion/index.jsx",[],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/pages/Info/styles.js",[],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/components/VaccinesCard/index.jsx",[],"/home/paulo/kenzie-projects/Q2/capstone-grupo-2/src/services/api.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":17,"column":28,"nodeType":"67","messageId":"68","endLine":17,"endColumn":30},{"ruleId":"69","severity":1,"message":"70","line":17,"column":3,"nodeType":"71","messageId":"72","endLine":17,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":54,"column":9,"nodeType":"71","messageId":"72","endLine":54,"endColumn":17},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'TitlePage' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]