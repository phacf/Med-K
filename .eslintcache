[{"/home/cirineu/projects/Q2/capstone-grupo-2/src/store/index.js":"1","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/Register/index.jsx":"2","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/Header/styles.js":"3","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/PageContent/styles.js":"4","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/MobileMenu/index.jsx":"5","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/WelcomeContent/index.jsx":"6","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/LoginForm/index.jsx":"7","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/MobileMenu/styles.js":"8","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/Motion/index.jsx":"9","/home/cirineu/projects/Q2/capstone-grupo-2/src/routes/index.js":"10","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/PageContent/index.jsx":"11","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientConsult/styles.js":"12","/home/cirineu/projects/Q2/capstone-grupo-2/src/services/api.js":"13","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/FormSection/index.jsx":"14","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/FormSection/styles.js":"15","/home/cirineu/projects/Q2/capstone-grupo-2/src/store/modules/user/reducer.js":"16","/home/cirineu/projects/Q2/capstone-grupo-2/src/store/modules/user/thunk.js":"17","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/Welcome/index.jsx":"18","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/Login/index.jsx":"19","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/DoctorExams/index.jsx":"20","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/FormComponents/styles.js":"21","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/Header/index.jsx":"22","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/DoctorRequest/index.jsx":"23","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/RegisterForm/index.jsx":"24","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/HamburguerMenu/index.jsx":"25","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientExam/index.jsx":"26","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/WelcomeContent/styles.js":"27","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/HamburguerMenu/styles.js":"28","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientExam/styles.js":"29","/home/cirineu/projects/Q2/capstone-grupo-2/src/styles/colors.js":"30","/home/cirineu/projects/Q2/capstone-grupo-2/src/index.js":"31","/home/cirineu/projects/Q2/capstone-grupo-2/src/styles/global.js":"32","/home/cirineu/projects/Q2/capstone-grupo-2/src/store/modules/user/actionsType.js":"33","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientRequests/index.jsx":"34","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientVaccines/index.jsx":"35","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientConsult/index.jsx":"36","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientVaccines/Card/index.jsx":"37"},{"size":301,"mtime":1611083368369,"results":"38","hashOfConfig":"39"},{"size":245,"mtime":1610982578732,"results":"40","hashOfConfig":"39"},{"size":1574,"mtime":1611095442305,"results":"41","hashOfConfig":"39"},{"size":188,"mtime":1611083368353,"results":"42","hashOfConfig":"39"},{"size":645,"mtime":1611083368349,"results":"43","hashOfConfig":"39"},{"size":535,"mtime":1611112885862,"results":"44","hashOfConfig":"39"},{"size":2503,"mtime":1611105788841,"results":"45","hashOfConfig":"39"},{"size":1032,"mtime":1611083368353,"results":"46","hashOfConfig":"39"},{"size":465,"mtime":1610982578728,"results":"47","hashOfConfig":"39"},{"size":2802,"mtime":1611113431284,"results":"48","hashOfConfig":"39"},{"size":167,"mtime":1611083368353,"results":"49","hashOfConfig":"39"},{"size":1322,"mtime":1611083368357,"results":"50","hashOfConfig":"39"},{"size":240,"mtime":1611083368365,"results":"51","hashOfConfig":"39"},{"size":208,"mtime":1610980806880,"results":"52","hashOfConfig":"39"},{"size":725,"mtime":1611083368341,"results":"53","hashOfConfig":"39"},{"size":686,"mtime":1611092631967,"results":"54","hashOfConfig":"39"},{"size":2167,"mtime":1611105821561,"results":"55","hashOfConfig":"39"},{"size":144,"mtime":1611093507927,"results":"56","hashOfConfig":"39"},{"size":230,"mtime":1610982578728,"results":"57","hashOfConfig":"39"},{"size":2900,"mtime":1611091270467,"results":"58","hashOfConfig":"39"},{"size":3162,"mtime":1611083368337,"results":"59","hashOfConfig":"39"},{"size":1461,"mtime":1611113015205,"results":"60","hashOfConfig":"39"},{"size":4822,"mtime":1610983094943,"results":"61","hashOfConfig":"39"},{"size":6562,"mtime":1611083672446,"results":"62","hashOfConfig":"39"},{"size":352,"mtime":1611083368341,"results":"63","hashOfConfig":"39"},{"size":2560,"mtime":1611091270467,"results":"64","hashOfConfig":"39"},{"size":844,"mtime":1611083368357,"results":"65","hashOfConfig":"39"},{"size":834,"mtime":1611083368341,"results":"66","hashOfConfig":"39"},{"size":1076,"mtime":1610982578732,"results":"67","hashOfConfig":"39"},{"size":147,"mtime":1610980806888,"results":"68","hashOfConfig":"39"},{"size":408,"mtime":1610982578728,"results":"69","hashOfConfig":"39"},{"size":967,"mtime":1611083368377,"results":"70","hashOfConfig":"39"},{"size":313,"mtime":1611083672450,"results":"71","hashOfConfig":"39"},{"size":1841,"mtime":1611112592925,"results":"72","hashOfConfig":"39"},{"size":2518,"mtime":1611112651531,"results":"73","hashOfConfig":"39"},{"size":2216,"mtime":1611091270467,"results":"74","hashOfConfig":"39"},{"size":1067,"mtime":1610982578732,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"14bxgrs",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"87"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"113"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"/home/cirineu/projects/Q2/capstone-grupo-2/src/store/index.js",[],["165","166"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/Register/index.jsx",[],["167","168"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/Header/styles.js",[],["169","170"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/PageContent/styles.js",[],["171","172"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/MobileMenu/index.jsx",[],["173","174"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/WelcomeContent/index.jsx",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/LoginForm/index.jsx",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/MobileMenu/styles.js",[],["175","176"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/Motion/index.jsx",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/routes/index.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/PageContent/index.jsx",[],["177","178"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientConsult/styles.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/services/api.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/FormSection/index.jsx",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/FormSection/styles.js",[],["179","180"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/store/modules/user/reducer.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/store/modules/user/thunk.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/Welcome/index.jsx",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/Login/index.jsx",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/DoctorExams/index.jsx",["181","182","183"],"import axios from \"axios\";\nimport \"antd/dist/antd.css\";\nimport { useState, useEffect } from \"react\";\nimport { Select } from \"antd\";\n\n\nconst { Option } = Select;\n\nconst DoctorExams = () => {\n  const [patients, setPatient] = useState([]);\n  const [history, setHistory] = useState(\"\");\n  const [exam, setExam] = useState(undefined);\n  const token = localStorage.getItem(\"authToken\");\n\n  const selectPatient = (\n    <>\n      {patients.map((patient, index) => (\n        <Option key={index} value={patient.id}>\n          {patient.email}\n        </Option>\n      ))}\n    </>\n  );\n\n  const onChange = (value) => {\n    patients.map((patient) => {\n      if (patient.id === value) {\n        setHistory(patient);\n      }\n    });\n  };\n\n  const handleDate = (evt) => {\n    console.log(history.exams[evt.target.id]);\n    setExam(history.exams[evt.target.id]);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"https://api-capstone-medik.herokuapp.com/users\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        const arrayPatient = [];\n        res.data.map((objClient) => {\n          if (objClient.type === \"patient\") {\n            arrayPatient.push(objClient);\n          }\n        });\n        setPatient(arrayPatient);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div>Exames</div>\n      <section>\n        <Select\n          showSearch\n          style={{ width: 200 }}\n          placeholder=\"Selecione um paciente\"\n          optionFilterProp=\"children\"\n          onChange={onChange}\n          filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n        >\n          {!!patients.length && selectPatient}\n        </Select>\n      </section>\n      <section>\n        {!!history.exams ? (\n          history.exams.map((exam, index) => {\n            return (\n              <div>\n                <button\n                  style={{ background: \"inherit\", border: \"none\", margin: 2 }}\n                  key={index}\n                  onClick={handleDate}\n                  id={index}\n                >\n                  {exam.data\n                    .replace(/[A-Z].*Z/, \"\")\n                    .split(\"-\")\n                    .reverse()\n                    .join(\"-\")}\n                </button>\n              </div>\n            );\n          })\n        ) : (\n          <p>Sem exames</p>\n        )}\n      </section>\n      <section>\n        <div>\n          {exam ? (\n            <div>\n              <h2>{exam.type}</h2>\n              <h3>\n                {exam.data\n                  .replace(/[A-Z].*Z/, \"\")\n                  .split(\"-\")\n                  .reverse()\n                  .join(\"-\")}\n              </h3>\n              <p>{exam.description}</p>\n            </div>\n          ) : (\n            <p>Sem dados</p>\n          )}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default DoctorExams;\n","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/FormComponents/styles.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/Header/index.jsx",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/DoctorRequest/index.jsx",["184","185","186"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Select } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button, DatePicker, message } from \"antd\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 14,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 14,\n    },\n    sm: {\n      span: 10,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst success = () => {\n  message.success(\"Consulta cadastrada com sucesso!\");\n};\n\nconst error = (err) => {\n  message.error(\"Campos inválidos. \");\n};\n\nconst DoctorRequest = () => {\n  const [patients, setPatient] = useState([]);\n  const [history, setHistory] = useState(\"\");\n  const token = localStorage.getItem(\"authToken\");\n  const [form] = Form.useForm();\n\n  const selectPatient = (\n    <>\n      {patients.map((patient, index) => (\n        <Option key={index} value={patient.id}>\n          {patient.email}\n        </Option>\n      ))}\n    </>\n  );\n\n  const tryLogin = (data) => {\n    let dataProcessed = {};\n    data.date = data.date._d;\n    data.isConfirm = false;\n    if (!!history.consultations) {\n      const consultatiosPrev = history.consultations;\n      dataProcessed = {\n        consultations: [...consultatiosPrev, data],\n      };\n    } else {\n      dataProcessed = {\n        consultations: [data],\n      };\n    }\n    console.log(dataProcessed);\n\n    axios\n      .patch(\n        `https://api-capstone-medik.herokuapp.com/consultations/${history.id}`,\n        dataProcessed,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((res) => {\n        console.log(res.data);\n        setHistory(res.data);\n        success();\n      })\n      .catch((err) => error());\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"https://api-capstone-medik.herokuapp.com/users\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        const arrayPatient = [];\n        res.data.map((objClient) => {\n          if (objClient.type === \"patient\") {\n            arrayPatient.push(objClient);\n          }\n        });\n        setPatient(arrayPatient);\n      });\n  }, []);\n\n  const onChange = (value) => {\n    patients.map((patient) => {\n      if (patient.id === value) {\n        setHistory(patient);\n      }\n    });\n  };\n\n  return (\n    <div>\n      <div>\n        <h1>Solicitação</h1>\n      </div>\n      <section>\n        <Select\n          showSearch\n          style={{ width: 200 }}\n          placeholder=\"Selecione um paciente\"\n          optionFilterProp=\"children\"\n          onChange={onChange}\n          filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n        >\n          {!!patients.length && selectPatient}\n        </Select>\n      </section>\n      <section>\n        <h2>Histórico</h2>\n        <div>\n          {history.consultations ? (\n            JSON.stringify(history.consultations)\n          ) : (\n            <p>Sem histórico</p>\n          )}\n        </div>\n      </section>\n      <section>\n        <h2>Solicitar consultas</h2>\n        <Form\n          style={{ paddingTop: 40 }}\n          {...formItemLayout}\n          form={form}\n          name=\"register\"\n          onFinish={tryLogin}\n          scrollToFirstError\n        >\n          <Form.Item\n            name=\"type\"\n            label=\"Nome do procedimento\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, insira o nome do procedimento.\",\n                whitespace: true,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            name=\"date\"\n            label=\"Data\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, insira uma data para o procedimento.\",\n              },\n            ]}\n          >\n            <DatePicker showTime />\n          </Form.Item>\n\n          <Form.Item\n            name=\"description\"\n            label=\"Descrição\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, insira descrição do processo.\",\n                whitespace: true,\n              },\n            ]}\n          >\n            <Input.TextArea />\n          </Form.Item>\n\n          <Form.Item {...tailFormItemLayout}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={history.id ? false : true}\n            >\n              Login\n            </Button>\n          </Form.Item>\n        </Form>\n      </section>\n    </div>\n  );\n};\n\nexport default DoctorRequest;\n","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/RegisterForm/index.jsx",["187"],"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { mask, unMask } from \"remask\";\nimport Swal from \"sweetalert2\";\nimport { userRegisterThunk } from \"../../store/modules/user/thunk\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Content, StyledForm } from \"../FormComponents/styles\";\nimport Motion from \"../Motion\";\n\nconst RegisterForm = () => {\n  const name = yup\n    .string()\n    .min(3, \"Nome inválido\")\n    .matches(/^[a-zA-z]/, \"Use apenas letras\")\n    .required(\"Campo requerido\");\n\n  const email = yup\n    .string()\n    .email(\"Email inválido\")\n    .required(\"Campo requerido\");\n\n  const document = yup\n    .string()\n    .min(11, \"Minimo de 11 caracteres\")\n    .required(\"Campo requerido\");\n\n  const password = yup\n    .string()\n    .min(8, \"Minimo de 8 caracteres\")\n    .matches(\n      /^((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n      \"Formato inválido\"\n    )\n    .required(\"Campo requerido\");\n\n  const passwordCheck = yup\n    .string()\n    .required(\"Campo requerido\")\n    .oneOf([yup.ref(\"password\")], \"As senhas não combinam\");\n\n  const schema = yup.object().shape({\n    name,\n    email,\n    document,\n    password,\n    passwordCheck,\n  });\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const handleForm = (data) => {\n    userRegisterThunk(data);\n    Swal.fire(\"Cadastro realizado!\", \"Faça login para continuar.\", \"success\");\n    history.push(\"/\");\n  };\n\n  const [docValue, setDocValue] = useState(\"\");\n  const [docType, setDocType] = useState(\"CPF\");\n  const [passwordState, setPasswordState] = useState(\"\");\n  const [passwordCheckState, setPasswordCheckState] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [documentError, setDocumentError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [passwordCheckError, setPasswordCheckError] = useState(false);\n\n  return (\n    <Motion>\n      <Content>\n        <h1>Cadastro</h1>\n        <StyledForm\n          onSubmit={handleSubmit(handleForm)}\n          nameError={nameError}\n          emailError={emailError}\n          documentError={documentError}\n          passwordError={passwordError}\n          passwordCheckError={passwordCheckError}\n        >\n          <div className=\"radioContent\">\n            <div className=\"radioInfo\">\n              <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"patient\"\n                defaultChecked\n                className=\"inputRadio\"\n                ref={register}\n                onClick={() => {\n                  setDocType(\"CPF\");\n                  setDocValue(\"\");\n                }}\n              />\n              <label className=\"labelRadio\">Paciente</label>\n            </div>\n            <div className=\"radioInfo\">\n              <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"medic\"\n                className=\"inputRadio\"\n                ref={register}\n                onClick={() => {\n                  setDocType(\"CRM\");\n                  setDocValue(\"\");\n                }}\n              />\n              <label className=\"labelRadio\">Médico</label>\n            </div>\n          </div>\n          <div>\n            <input\n              name=\"name\"\n              required\n              ref={register}\n              onChange={(e) =>\n                name.isValid(e.target.value).then((res) => setNameError(res))\n              }\n            ></input>\n            <label htmlFor=\"name\" className=\"name\">\n              <span>Nome</span>\n            </label>\n          </div>\n          <p>{errors.name?.message}</p>\n          <div>\n            <input\n              name=\"email\"\n              required\n              ref={register}\n              onChange={(e) =>\n                email.isValid(e.target.value).then((res) => setEmailError(res))\n              }\n            ></input>\n            <label htmlFor=\"email\" className=\"email\">\n              <span>Email</span>\n            </label>\n          </div>\n          <p>{errors.email?.message}</p>\n          <div>\n            <input\n              name=\"document\"\n              required\n              autoComplete=\"off\"\n              ref={register}\n              value={docValue}\n              onChange={(e) => {\n                let input = unMask(e.target.value);\n\n                document.isValid(input).then((res) => setDocumentError(res));\n\n                docType === \"CPF\"\n                  ? setDocValue(mask(input, [\"999.999.999-99\"]))\n                  : setDocValue(mask(input, [\"999999999/AA\"]));\n              }}\n            ></input>\n            <label htmlFor=\"document\" className=\"document\">\n              <span>{docType}</span>\n            </label>\n          </div>\n          <p>{errors.document?.message}</p>\n          <div>\n            <input\n              name=\"password\"\n              required\n              ref={register}\n              type=\"password\"\n              onChange={(e) => {\n                const input = e.target.value;\n                password.isValid(input).then((res) => {\n                  setPasswordError(res);\n                  setPasswordState(input);\n                  setPasswordCheckError(passwordCheckState === input);\n                });\n              }}\n            ></input>\n            <label htmlFor=\"password\" className=\"password\">\n              <span className=\"labelSpan\">Senha</span>\n            </label>\n          </div>\n          <p>{errors.password?.message}</p>\n          <div>\n            <input\n              name=\"passwordCheck\"\n              required\n              ref={register}\n              type=\"password\"\n              onChange={(e) => {\n                setPasswordCheckError(e.target.value === passwordState);\n                setPasswordCheckState(e.target.value);\n              }}\n            ></input>\n            <label htmlFor=\"passwordCheck\" className=\"passwordCheck\">\n              <span className=\"labelSpan\">Confirmar Senha</span>\n            </label>\n          </div>\n          <p>{errors.passwordCheck?.message}</p>\n          <button type=\"submit\">Cadastrar</button>\n        </StyledForm>\n        <Link to=\"/\">Login</Link>\n      </Content>\n    </Motion>\n  );\n};\n\nexport default RegisterForm;\n","/home/cirineu/projects/Q2/capstone-grupo-2/src/components/HamburguerMenu/index.jsx",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientExam/index.jsx",["188","189","190","191"],"import { Container, Section, DescriptionDate, Date } from \"./styles\";\nimport { getPatientExamThunk } from \"../../store/modules/user/thunk\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nconst PatientExam = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const [examDetails, setExamDetails] = useState({});\n  const user = useSelector((state) => state.user.patientProfile);\n  const handleClick = (exam) => {\n    setExamDetails(exam);\n  };\n\n  useEffect(() => {\n    dispatch(getPatientExamThunk(id));\n  }, []);\n\n  return (\n    <Container>\n      <h1 className=\"container_title\">Suas Consultas</h1>\n      <Section>\n        <Date>\n          <button className=\"date_button\">03/02</button>\n        </Date>\n        <DescriptionDate>\n          <p className=\"descriptiondate_date\">03/02</p>\n          <p className=\"descriptiondate_type\">Prostata</p>\n          <p className=\"descriptiondate_description\">\n            lspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpalspalspalspalspalsaplspalspaslapslapslpa\n          </p>\n        </DescriptionDate>\n      </Section>\n      <button class=\"container_button\">Voltar</button>\n    </Container>\n  );\n};\n\nexport default PatientExam;\n",["192","193"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/WelcomeContent/styles.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/components/HamburguerMenu/styles.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientExam/styles.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/styles/colors.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/index.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/styles/global.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/store/modules/user/actionsType.js",[],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientRequests/index.jsx",["194","195"],"/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientVaccines/index.jsx",["196","197","198","199","200"],"import Card from \"./Card\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function PageVaccines() {\n  const [card, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  //     setLoading(true)\n  //     axios.get('abc123').then(res => {\n  //         setLoading(false)\n  //         setCards(res.map(c => c.exemplo))\n  //     })\n  // }, [])\n\n  const divStyle = {\n    backgraoundColor: \"white\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  };\n\n  const divStyle2 = {\n    backgraoundColor: \"white\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    width: \"85vw\",\n    color: \"black\",\n    borderRadius: \"10px\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n  };\n\n  const h1Style = {\n    fontSize: \"5vw\",\n  };\n\n  const divButton = {\n    height: \"6vh\",\n    width: \"23vw\",\n    boxShadow: \"4px 4px 16px 8px rgba(0, 0, 0, 0.25)\",\n    margin: \"20px\",\n    borderRadius: \"10px\",\n  };\n\n  if (loading) return <h1 style={{ color: \"black\" }}>...Loading</h1>;\n\n  return (\n    <div style={divStyle2}>\n      <h1 style={h1Style}>Vacinação</h1>\n      <div style={divStyle}>\n        {/* {ex.map((vaccine,local,date,index)=>{\n           <Card vaccine={vaccine} local={local} date={date} key={index} />\n         })} */}\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n        <Card vaccine=\"{vaccine}\" local=\"{local}\" date=\"{date\" key=\"{index}\" />\n      </div>\n      <div style={divButton}>Sair</div>\n    </div>\n  );\n}\n","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientConsult/index.jsx",["201","202","203"],"import {\n  Container,\n  Section,\n  DescriptionDate,\n  Date,\n  Notification,\n} from \"./styles\";\nimport {\n  getPatientConsultThunk,\n  getPatientConfirm,\n} from \"../../store/modules/user/thunk\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\n// alterar nome das requisições\n\nconst PatientConsult = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const [consultDetails, setConsultDetails] = useState({});\n  const user = useSelector((state) => state.user.userInfo);\n\n  const handleClick = (consult) => {\n    setConsultDetails(consult);\n  };\n\n  const confirmConsult = () => {\n    const consult = { ...consultDetails, isConfirm: true };\n    const newConsults = user.consultations.map(({ type }, index, arr) => {\n      if (type === consult.type) {\n        arr.splice(index, 1);\n        arr.push(consult);\n      }\n      return arr;\n    });\n    dispatch(getPatientConfirm(id, ...newConsults));\n  };\n\n\n\n  return (\n    <Container>\n      <h1 className=\"container_title\">Suas Consultas</h1>\n      <Section>\n        <Date>\n          {user.consultations?.map((consult, index) => (\n            <button\n              className=\"date_button\"\n              key={index}\n              onClick={() => handleClick(consult, index)}\n            >\n              {consult.data}\n            </button>\n          ))}\n        </Date>\n        <DescriptionDate>\n          <p className=\"descriptiondate_date\">{consultDetails.data}</p>\n          <p className=\"descriptiondate_type\">{consultDetails.type}</p>\n          <p className=\"descriptiondate_description\">\n            {consultDetails.description\n              ? consultDetails.description\n              : \"Sem descrição\"}\n          </p>\n        </DescriptionDate>\n      </Section>\n      <button className=\"container_button\">Voltar</button>\n      {consultDetails.isConfirm ? (\n        <button className=\"container_button\" disabled>\n          Confirmado\n        </button>\n      ) : (\n        <button className=\"container_button\" onClick={() => confirmConsult()}>\n          Confirmar\n        </button>\n      )}\n    </Container>\n  );\n};\n\nexport default PatientConsult;\n","/home/cirineu/projects/Q2/capstone-grupo-2/src/pages/PatientVaccines/Card/index.jsx",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"204","replacedBy":"208"},{"ruleId":"206","replacedBy":"209"},{"ruleId":"204","replacedBy":"210"},{"ruleId":"206","replacedBy":"211"},{"ruleId":"204","replacedBy":"212"},{"ruleId":"206","replacedBy":"213"},{"ruleId":"204","replacedBy":"214"},{"ruleId":"206","replacedBy":"215"},{"ruleId":"204","replacedBy":"216"},{"ruleId":"206","replacedBy":"217"},{"ruleId":"204","replacedBy":"218"},{"ruleId":"206","replacedBy":"219"},{"ruleId":"204","replacedBy":"220"},{"ruleId":"206","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":26,"column":28,"nodeType":"224","messageId":"225","endLine":26,"endColumn":30},{"ruleId":"222","severity":1,"message":"223","line":45,"column":34,"nodeType":"224","messageId":"225","endLine":45,"endColumn":36},{"ruleId":"226","severity":1,"message":"227","line":52,"column":6,"nodeType":"228","endLine":52,"endColumn":8,"suggestions":"229"},{"ruleId":"222","severity":1,"message":"223","line":103,"column":34,"nodeType":"224","messageId":"225","endLine":103,"endColumn":36},{"ruleId":"226","severity":1,"message":"227","line":110,"column":6,"nodeType":"228","endLine":110,"endColumn":8,"suggestions":"230"},{"ruleId":"222","severity":1,"message":"223","line":113,"column":28,"nodeType":"224","messageId":"225","endLine":113,"endColumn":30},{"ruleId":"231","severity":1,"message":"232","line":54,"column":9,"nodeType":"233","messageId":"234","endLine":54,"endColumn":17},{"ruleId":"231","severity":1,"message":"235","line":9,"column":10,"nodeType":"233","messageId":"234","endLine":9,"endColumn":21},{"ruleId":"231","severity":1,"message":"236","line":10,"column":9,"nodeType":"233","messageId":"234","endLine":10,"endColumn":13},{"ruleId":"231","severity":1,"message":"237","line":11,"column":9,"nodeType":"233","messageId":"234","endLine":11,"endColumn":20},{"ruleId":"226","severity":1,"message":"238","line":17,"column":6,"nodeType":"228","endLine":17,"endColumn":8,"suggestions":"239"},{"ruleId":"204","replacedBy":"240"},{"ruleId":"206","replacedBy":"241"},{"ruleId":"231","severity":1,"message":"242","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":21},{"ruleId":"231","severity":1,"message":"243","line":7,"column":9,"nodeType":"233","messageId":"234","endLine":7,"endColumn":15},{"ruleId":"231","severity":1,"message":"244","line":2,"column":20,"nodeType":"233","messageId":"234","endLine":2,"endColumn":29},{"ruleId":"231","severity":1,"message":"245","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":13},{"ruleId":"231","severity":1,"message":"246","line":6,"column":10,"nodeType":"233","messageId":"234","endLine":6,"endColumn":14},{"ruleId":"231","severity":1,"message":"247","line":6,"column":16,"nodeType":"233","messageId":"234","endLine":6,"endColumn":24},{"ruleId":"231","severity":1,"message":"248","line":7,"column":19,"nodeType":"233","messageId":"234","endLine":7,"endColumn":29},{"ruleId":"231","severity":1,"message":"249","line":6,"column":3,"nodeType":"233","messageId":"234","endLine":6,"endColumn":15},{"ruleId":"231","severity":1,"message":"250","line":9,"column":3,"nodeType":"233","messageId":"234","endLine":9,"endColumn":25},{"ruleId":"231","severity":1,"message":"244","line":14,"column":20,"nodeType":"233","messageId":"234","endLine":14,"endColumn":29},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],["251"],["252"],["251"],["252"],["251"],["252"],["251"],["252"],["251"],["252"],["251"],["252"],["251"],["252"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["253"],["254"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'examDetails' is assigned a value but never used.","'user' is assigned a value but never used.","'handleClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["255"],["251"],["252"],"'yupResolver' is defined but never used.","'schema' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'card' is assigned a value but never used.","'setCards' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Notification' is defined but never used.","'getPatientConsultThunk' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"256","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [token]",{"range":"261","text":"262"},{"range":"263","text":"262"},"Update the dependencies array to be: [dispatch, id]",{"range":"264","text":"265"},[1262,1264],"[token]",[2310,2312],[629,631],"[dispatch, id]"]